<h2>Prelude</h2>

<p>In this article I&#8217;ll share with you a few tips and tricks about
running Emacs under the Max OS X operating system. This article will
focus on the vanilla GNU Emacs, but if you want a more native OS X experience you
might have a look at the
<a href="https://github.com/railwaycat/homebrew-emacsmacport/releases">enhanced Emacs Mac port</a>.</p>

<h2>Installation</h2>

<p>While Emacs is available for installation from
<a href="http://wikemacs.org/wiki/Installing_Emacs_on_OS_X">various sources</a>
I recommend you to use the
<a href="http://emacsformacosx.com/">Emacs for Mac OS X binary distribution</a>.</p>

<p>I always run the latest development version and I use homebrew to install it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install emacs --HEAD --with-cocoa
</span></code></pre></td></tr></table></div></figure>


<p>Keep in mind there&#8217;s an ancient Emacs 22 that ships with OS X.  You
might want to alter your <code>PATH</code>, so that the new Emacs is picked up in
a shell.</p>

<p>Alternatively you can just create an alias in your shell and when you
invoke <code>emacs</code> it will run the newly installed version:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">alias </span><span class="nv">emacs</span><span class="o">=</span><span class="s2">&quot;/Applications/Emacs.app/Contents/MacOS/Emacs -nw&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you installed via Homebrew that path might look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">alias </span><span class="nv">emacs</span><span class="o">=</span><span class="s2">&quot;/usr/local/Cellar/emacs/24.5/Emacs.app/Contents/MacOS/Emacs -nw&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To make it permanent, if using bash, add that line to
<code>~/.bash_profile</code>. zsh users will want to update <code>~/.zshrc</code> instead.</p>

<p>In case you&#8217;re wondering - <code>nw</code> tells Emacs to start in &#8220;terminal&#8221;
mode (instead of in GUI mode).</p>

<h2>Keybindings</h2>

<p>I heartily recommend you to remap your <em>Caps Lock</em> key to <em>Control</em>. This
can be easily done via <em>Preferences -> Keyboard -> Modifier Keys</em>. If
you&#8217;re using a laptop keyboard or the bluetooth keyboard you
might want to remap your right <code>Option</code> key to <code>Control</code> as
well. No one can use effectively Emacs without a right Control
key. Remapping it is a bit more involved and requires the use of the
third-party utility
<a href="http://pqrs.org/macosx/karabiner/">Karabiner</a>.</p>

<p>If you&#8217;re adventurous you might even try <a href="http://emacsredux.com/blog/2013/11/12/a-crazy-productivity-boost-remap-return-to-control/">a crazier idea</a>.</p>

<h2>Setting the PATH variable</h2>

<p>Long story short - if you&#8217;re running Emacs from Spotlight (or any
other launcher for that matter) your <code>PATH</code> and <code>exec-path</code> variables
won&#8217;t be same as the ones in your shell (and that&#8217;s every nasty since
you want be able to run some external programs from Emacs). The best
way to handle this would be installing the package
<a href="https://github.com/purcell/exec-path-from-shell">exec-path-from-shell</a>
by Steve Purcell.</p>

<h2>Flyspell</h2>

<p>For flyspell to work correctly you&#8217;ll need to install aspell plus a few dictionaries.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install aspell --lang<span class="o">=</span>en
</span></code></pre></td></tr></table></div></figure>


<h2>Proced</h2>

<p>The mighty
<a href="http://emacsredux.com/blog/2013/05/02/manage-processes-with-proced/">proced</a>
doesn&#8217;t work on OS X.  You can use
<a href="http://www.splode.com/~friedman/software/emacs-lisp/src/vkill.el">vkill</a>
as a replacement. It&#8217;s kind of basic, but it mostly works.</p>

<h2>Dired</h2>

<p>OS X ships with BSD&#8217;s <code>ls</code> command which doesn&#8217;t have all the features
of GNU <code>ls</code> (used internally by <code>dired</code>). Fortunately, this is easily solvable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install coreutils
</span></code></pre></td></tr></table></div></figure>


<p>To avoid conflicts the GNU utils are prefixed with <code>g</code>, so <code>ls</code> becomes <code>gls</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">insert-directory-program</span> <span class="p">(</span><span class="nv">executable-find</span> <span class="s">&quot;gls&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dash</h2>

<p><a href="https://kapeli.com/dash">Dash</a> is the ultimately API documentation
browser. I can&#8217;t live without it!</p>

<p>If you&#8217;re using it as well, you might want to install
<a href="https://github.com/stanaka/dash-at-point">dash-at-point</a>.</p>

<h2>More goodies</h2>

<p>If you want to spare yourself part of the headache of configuring
Emacs on OSX and get a lot of extra firepower you might want to install
<a href="https://github.com/bbatsov/prelude">Emacs Prelude</a> - an enhanced
Emacs 24.x configuration (developed by yours truly) that should make
your experience with Emacs both more pleasant and more powerful.</p>

<p><strong>P.S.</strong> I&#8217;d like to hear your tips &amp; suggestions about making the
Emacs experience on OS X nicer and more powerful!</p>
