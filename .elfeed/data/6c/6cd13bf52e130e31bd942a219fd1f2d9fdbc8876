<p><em>UPDATE: This post now contains obsolete information. Please
read the new
<a href="https://github.com/clojure/clojurescript/wiki/Quick-Start">ClojureScript Quick Start</a>
instead</em></p>

<p>Clojure has always been about embracing existing mature
platforms. Being on the JVM means tapping into untold person years
poured into battle-tested libraries and access to a vast ecosystem
with powerful <a href="https://cursiveclojure.com">IDEs</a>, incredible
<a href="http://www.oracle.com/technetwork/java/javaseproducts/mission-control/java-mission-control-1998576.html">profiling</a>
<a href="http://www.yourkit.com">tools</a>, and answers to
<a href="http://stackoverflow.com/questions/tagged/java">nearly any question imaginable</a>.</p>

<p>Similarly ClojureScript brings a hefty helping of Clojure&#39;s semantics
to the most important
<a href="http://en.wikipedia.org/wiki/World_Wide_Web">platform</a> of all. And
thanks to some smart folks 
<a href="http://facebook.github.io/react/">rethinking best practices</a>,
ClojureScript&#39;s solid semantics now shine in way that leaves many
JavaScript libraries playing catchup and copycat.</p>

<p>But of course these days the Web isn&#39;t the only reason to target
JavaScript - Node.js is another <a href="http://aws.amazon.com/lambda/">great</a>
<a href="http://www.raspberrypi.org">platform</a> with
<a href="https://github.com/atom/atom-shell">attractive</a> properties for
ClojureScript.</p>

<p>ClojureScript actually shipped three and a half years ago with some
promise of Node.js integration but it remained low priority due to the
fact we had a robust technology for writing server side code. But now
that the languages bits of ClojureScript aren&#39;t evolving so quickly I
decided it was a time to go back and make good on this promise.</p>

<p>Prior to the latest commits, ClojureScript shipped with only two
REPLs, Rhino and the Browser. These REPLs are unsatisfactory in some simple
ways - the Rhino REPL runs ClojureScript more than 100X slower than modern
JavaScript engines and the Browser REPL requires you to ... start a
browser.</p>

<p>Enter the Node.js REPL!</p>

<p>Why don&#39;t you give it a shot? You just need to make sure you have
Node.js installed:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">git clone https://github.com/clojure/clojurescript
cd clojurescript
./script/bootstrap
./script/self-compile
npm install source-map-support
</code></pre></div>
<p>Now you&#39;re ready to run the REPL:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">./script/noderepljs
</code></pre></div>
<p>The first time you launch this REPL it will be a bit slow as we have
to compile the standard library. Subsequent launches will be
faster. There&#39;s still some work to do so expect this to improve over
time.</p>

<p>Once you have a REPL up and running try the following session (the Clojure
programmers reading this will probably yell <em>Hallelujah!</em>):</p>

<p>Run a simple expression:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">ClojureScript:cljs.user&gt; (first [1 2 3])
1
</code></pre></div>
<p>Get a doc string:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">ClojureScript:cljs.user&gt; (doc first)
-------------------------
cljs.core/first
([coll])
  Returns the first item in the collection. Calls seq on its
  argument. If coll is nil, returns nil.
nil
</code></pre></div>
<p>Load a library and try it:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">ClojureScript:cljs.user&gt; (require &#39;[clojure.string :as string])

ClojureScript:cljs.user&gt; (string/join &quot;, &quot; [1 2 3])
&quot;1, 2, 3&quot;
</code></pre></div>
<p>Time an expression:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">ClojureScript:cljs.user&gt; (time (reduce + (range 1000000)))
&quot;Elapsed time: 211 msecs&quot;
499999500000
</code></pre></div>
<p>Write a bad program and get a ClojureScript stack trace not
a JavaScript one:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">ClojureScript:cljs.user&gt; (first (js/Date.))
Error: Mon Dec 29 2014 18:16:00 GMT-0500 (EST) is not ISeqable
    at Object.seq (.../cljs/core.cljs:664:20)
    at first (.../cljs/core.cljs:673:16)
    at repl:1:81
    at repl:9:3
    at Socket.&lt;anonymous&gt; ([stdin]:26:80)
    at Socket.emit (events.js:95:17)
    at Socket.&lt;anonymous&gt; (_stream_readable.js:764:14)
    at Socket.emit (events.js:92:17)
    at emitReadable_ (_stream_readable.js:426:10)
    at emitReadable (_stream_readable.js:422:5)
</code></pre></div>
<p>Have fun!</p>
