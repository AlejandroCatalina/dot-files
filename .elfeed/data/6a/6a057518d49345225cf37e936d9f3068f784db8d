<p><strong>UPDATE</strong>: This is now an outdated post. For more accurate
  information on enabling source maps please refer to the <a href="http://github.com/clojure/clojurescript/wiki/Source-maps">ClojureScript
  Wiki entry</a>.</p>

<p>ClojureScript has had experimental
<a href="http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/">source map</a>
support for some time. Unlike other transpile to JavaScript languages,
ClojureScript source maps actually map all the way through Google
Closure advanced compilation! However this support suffered from
inaccuracies due to the lack of necessary information from the Clojure
reader and less than ideal handling of function parameters and let
bindings in the ClojureScript compiler. We switched to
<a href="http://github.com/clojure/tools.reader">tools.reader</a>, a wonderful
library led by <a href="http://twitter.com/Bronsa_">Nicola Mometto</a> that works
just like the standard reader but provides the needed line and column
information on all symbols. Then we received a patch this weekend from
<a href="http://twitter.com/sgrove">Sean Grove</a> that fixed an off by one error
and changed the compiler to properly emit function parameters and let
binding. With these things in place we can finally emit accurate
source maps. There&#39;s likely more issues but the only way to find out
is to give it a try and file some bug reports!</p>

<p>In order to enable source maps your project.clj should look something
like this:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">(defproject example &quot;0.1.0-SNAPSHOT&quot;
  :dependencies [[org.clojure/clojure &quot;1.5.1&quot;]
                 [org.clojure/clojurescript &quot;0.0-1889&quot;]]

  :plugins [[lein-cljsbuild &quot;0.3.2&quot;]]

  :cljsbuild
  {:builds
   [{:id &quot;advanced&quot;
     :source-paths [&quot;src/example&quot;]
     :compiler {:optimizations :advanced
                :pretty-print false
                :output-dir &quot;out&quot;
                :output-to &quot;main.js&quot;
                :source-map &quot;main.js.map&quot;}}]}) ;; &lt;&lt; ADD THIS
</code></pre></div>
<p>Currently the source map generated by the ClojureScript compiler uses
full paths for the files. How to best configure this is up for
discussion as some files live in JARs and ClojureScript doesn&#39;t always
write out these files to <code>:output-dir</code>. Perhaps it should but that&#39;s
the kind of feedback we&#39;re looking for and the kind of patches we&#39;re
interested in.</p>

<p>In the meantime you can still test out the feature as we&#39;ve hacked the
ClojureScript browser REPL web server to handle serving files from
JARs and elsewhere! So just make sure source maps are enabled in your
browser of choice, make an <code>index.html</code> file that includes your
ClojureScript output file, run <code>lein trampoline cljsbuild repl-listen</code>
and point your browser at <code>http://localhost:9000</code>.</p>

<p>If you get it working you should be able to <code>console.log</code> something
and the browser will give you an accurate location where that
statement was executed in the original source:</p>

<p><image width="580" style="border: 1px solid #666" src="/assets/images/sourcemap.png"/></p>

<p>If you run into issues please let us know on the
<a href="http://groups.google.com/forum/#!forum/clojurescript">ClojureScript mailing list</a>
or the Clojure IRC cannnel.</p>
